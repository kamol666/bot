<!-- payment-card-insert.ejs -->
<!doctype html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport"
        content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Click Payment</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #141414;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            background-color: #302d2d;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 450px;
            padding: 30px;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header .logo {
            margin-bottom: 15px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .header .logo img {
            height: 50px;
        }

        .header h1 {
            color: #ffffff;
            font-size: 24px;
            margin: 0;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #ffffff;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #444;
            background-color: #222;
            color: #fff;
            border-radius: 6px;
            font-size: 16px;
            box-sizing: border-box;
            transition: border-color 0.3s;
        }

        input::placeholder {
            color: #777;
        }

        input:focus {
            border-color: #0f8fee;
            outline: none;
        }

        .card-row {
            display: flex;
            gap: 15px;
        }

        .card-row .form-group:first-child {
            flex: 2;
        }

        .card-row .form-group:last-child {
            flex: 1;
        }

        button {
            background-color: #127dff;
            color: white;
            border: none;
            border-radius: 6px;
            padding: 14px;
            font-size: 16px;
            font-weight: 600;
            width: 100%;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #0d7dd4;
        }

        .error {
            color: #ff6b6b;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }

        .card-icon {
            position: absolute;
            right: 10px;
            top: 12px;
            color: #999;
        }

        .relative {
            position: relative;
        }

        .footer {
            text-align: center;
            margin-top: 25px;
            color: #aaa;
            font-size: 14px;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="header">
            <div class="logo">
                <img src="http://www.w3.org/2000/svg" alt="Click Logo">
            </div>
            <h1>Yulduzlar bashorati Premium</h1>
        </div>

        <form id="paymentForm">
            <div class="form-group">
                <label for="cardNumber">Karta Raqam</label>
                <div class="relative">
                    <input type="text" id="cardNumber" placeholder="0000 0000 0000 0000" maxlength="19"
                        inputmode="numeric" pattern="[0-9 ]*">
                </div>
                <div class="error" id="cardNumberError">Iltimos to'g'ri karta raqam kiriting</div>
            </div>

            <div class="card-row">
                <div class="form-group">
                    <label for="expireDate">Amal qilish muddati</label>
                    <input type="text" id="expireDate" placeholder="MM/YY" maxlength="5" inputmode="numeric"
                        pattern="[0-9/]*">
                    <div class="error" id="expireDateError">Iltimos amal qilish muddatini to'g'ri kiriting</div>
                </div>
            </div>

            <div class="form-group">
                <button type="submit" id="submitBtn">Yuborish</button>
            </div>
        </form>

        <div class="footer">
        </div>
    </div>

    <script>


        document.addEventListener('DOMContentLoaded', function () {
            // Card number formatting
            const urlParams = new URLSearchParams(window.location.search);

            const userId = urlParams.get('userId');
            const planId = urlParams.get('planId');
            const selectedService = urlParams.get('selectedService');
            // const telegramId = urlParams.get('telegramId');


            console.log(`UserId is: ${userId}`);
            // console.log(`PlanId is: ${planId}`);
            // console.log(`TelegramId is: ${telegramId}`);

            const cardInput = document.getElementById('cardNumber');


            cardInput.addEventListener('input', function (e) {
                let value = e.target.value.replace(/\D/g, '');
                if (value.length > 0) {
                    value = value.match(new RegExp('.{1,4}', 'g')).join(' ');
                }
                e.target.value = value;
            });

            // Expiry date formatting
            const expiryInput = document.getElementById('expireDate');
            expiryInput.addEventListener('input', function (e) {
                let value = e.target.value.replace(/\D/g, '');
                if (value.length > 2) {
                    value = value.substring(0, 2) + '/' + value.substring(2, 4);
                }
                e.target.value = value;
            });

            // Form submission
            // Form submission
            const form = document.getElementById('paymentForm');
            form.addEventListener('submit', async function (e) {
                e.preventDefault();

                // Reset errors
                document.querySelectorAll('.error').forEach(el => el.style.display = 'none');

                // Get values
                const cardNumber = cardInput.value.replace(/\s/g, '');
                const expireDate = expiryInput.value.replace('/', '');

                let isValid = true;

                // Basic validation
                if (!/^\d{16}$/.test(cardNumber)) {
                    document.getElementById('cardNumberError').style.display = 'block';
                    isValid = false;
                }

                if (!/^\d{4}$/.test(expireDate)) {
                    document.getElementById('expireDateError').style.display = 'block';
                    isValid = false;
                }

                if (isValid) {
                    // Show loading state
                    const submitBtn = document.getElementById('submitBtn');
                    const originalBtnText = submitBtn.textContent;
                    submitBtn.disabled = true;
                    submitBtn.textContent = 'Processing...';

                    try {
                        // Format for API - convert MM/YY to MMYY
                        const formattedExpiry = expireDate;

                        // Call API to create card token
                        const requestData = {
                            card_number: cardNumber,
                            expire_date: formattedExpiry,
                            temporary: 0,
                            userId: userId,
                            planId: planId,
                            // selectedService: selectedService
                            // telegramId: telegramId
                        };

                        // In a real implementation, you would send this data to the Click API
                        // Replace this with your actual API call
                        const response = await fetch('create-card-token', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(requestData)
                        });

                        if (response.ok) {
                            const data = await response.json();
                            // Assuming the API returns a token and a phone number
                            const token = data.token;

                            // Redirect to SMS verification page
                            window.location.href = `verify-sms?token=${token}&userId=${userId}&expireDate=${formattedExpiry}&planId=${planId}&selectedService=${selectedService}`;
                        } else {
                            throw new Error('Failed to create card token');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        // Show error message to user
                        alert('There was an error processing your card. Please try again.');

                        // Reset button state
                        submitBtn.disabled = false;
                        submitBtn.textContent = originalBtnText;
                    }
                }
            });
        });
    </script>
</body>

</html>